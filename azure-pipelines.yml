trigger:
- master


pr:
- master

stages:

- stage: build
  displayName: build

  jobs:

  - job: build
    displayName: build

    pool:
      vmImage: ubuntu-latest

    steps:

    - script: |
        dotnet build
      displayName: 'dotnet build'

   
  - job: test
    displayName: test

    pool:
      vmImage: ubuntu-latest

    steps:

    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'sonarcloud-PStewart1'
        organization: '2002-feb24-net'
        scannerMode: 'MSBuild'
        projectKey: '2002-feb24-net_pauls-project1'
        projectName: 'Pauls-Project1'
        extraProperties: |
          sonar.exclusions=**/lib/**
      continueOnError: true
      displayName: sonarcloud analysis prepare

    - task: SonarCloudAnalyze@1
      continueOnError: true
      displayName: sonarcloud analysis run

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testRunner: VSTest
        testResultsFiles: $(Common.TestResultsDirectory)/*.trx
      displayName: test results build publish

    - task: PublishCodeCoverageResults@1
      condition: succeededOrFailed()
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: $(Common.TestResultsDirectory)/*/coverage.cobertura.xml
      displayName: code coverage build publish
    
    - script: |
        dotnet build
      displayName: 'dotnet build'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: true

    - task: SonarCloudPublish@1
      condition: succeededOrFailed()
      displayName: sonarcloud results build publish

- stage: deploy
  displayName: deploy
 

  jobs:

  - deployment: deploy_dev
    displayName: deploy dev

    pool:
      vmImage: ubuntu-latest

    environment: dev

    strategy:
      runOnce:
        deploy:
          steps:

          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Azure subscription 1(4)(34c1f765-2be7-443c-b6cc-1dfb59828d08)'
              appType: 'webApp'
              WebAppName: 'GoodBurger'
              packageForLinux: '$(Pipeline.Workspace)/app'
            displayName: Website Deployment